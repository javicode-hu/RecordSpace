<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hjw.mapper.BlogColumnMapper">


    <select id="searchBlogColumnByUserId" resultType="com.hjw.domain.vo.ColumnItemVo">
       select a.id,a.name,a.description,a.create_time,count(c.id) as article_count,
              ifnull(sum(c.view_count),0) as view_count,
              ifnull(sum(c.like_count) ,0) as like_count,
              d.nickname as author
        from rs_blog_column a
        left join rs_article_related_column b on a.id  = b.column_id
        left join rs_blog_article c on b.article_id = c.id
        inner join rs_sys_user d on d.id = a.user_id
        <where>
            <if test="searchDto.userId!=null ">
                a.user_id = #{searchDto.userId}
            </if>
            <if test="searchDto.searchKey!='' and searchDto.searchKey!=null ">
                and a.name like concat('%',#{searchDto.searchKey},'%')
                or  a.description like concat('%',#{searchDto.searchKey},'%')
            </if>
            group by a.id
            <if test="searchDto.sortParam!='' and searchDto.sortParam!=null">
                order by ${searchDto.sortParam}
            </if>
            <if test="searchDto.sortMethod!='' and searchDto.sortMethod!=null ">
                ${searchDto.sortMethod}
            </if>
        </where>
    </select>

    <select id="getBlogColumnById" resultType="com.hjw.domain.vo.ColumnItemVo">
        select a.id,a.name,a.description,a.create_time,count(c.id) as article_count,
               ifnull(sum(c.view_count),0) as view_count,
               ifnull(sum(c.like_count),0)  as like_count,
               d.nickname as author
        from rs_blog_column a
        left join rs_article_related_column b on a.id  = b.column_id and a.id =  #{id}
        left join rs_blog_article c on b.article_id = c.id
        inner join rs_sys_user d on d.id = a.user_id
    </select>

</mapper>
